<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_text</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>text[0] ="";
alarm[0] = -1;
lengthAppearing = 0;
currentText = 0;
talk = false;
doneAll = false;
donePage = false;
canSkip = false;
final = false;
upDist = 50;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canSkip = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
var len = string_length(string(text[currentText])) 
if (len&gt;lengthAppearing) {
    lengthAppearing++;
    if (random(1)&lt;0.7) {
        audio_play_sound(snd_text,0,false);
    }
} else {
    donePage = true;
}
alarm[0] = 3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if place_meeting(x,y, obj_player){
    if keyboard_check_pressed(vk_space) and !talk {
        talk = true;
        alarm[0] = 3;
        lengthAppearing = 0;
        currentText = 0;
        doneAll = false;
        donePage = false;
        alarm[1] = 2;
        canSkip = false;
        obj_player.talking = true;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (talk) {
    draw_sprite(spr_textBox,0,x,y-upDist);
    draw_set_halign(fa_right);
    draw_set_colour(c_white);
    draw_set_font(fnt_regular);
    
    //get how long the string is in terms of width
    length = string_length(string(text[currentText]));
    
    for(i=1;i&lt;=lengthAppearing;i+=1){ //loop through each character of the string
        str=string_copy(text[currentText],i,1); //1 character of the string 
        length_so_far=string_width(string_copy(text[currentText],1,i)); //how far to offset the text
        draw_text(x+length_so_far-string_width(text[currentText])/2,y-20-upDist,str);
    }
    
    if (length == lengthAppearing) and (array_length_1d(text)-1==currentText) {
        doneAll = true;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (talk) {
    if (doneAll) {
        talk = false;
        doneAll = false;
        alarm[0] = -1;
        lengthAppearing = 0;
        obj_player.talking = false;
        donePage = false;
        currentText = 0;
        if (final) {
            obj_player.talking = true;
            audio_play_sound(snd_oof,0,false);
            room_goto(rm_credits);
            with(obj_view) {instance_destroy();};
            with(obj_player) {instance_destroy();};
            instance_destroy();
        }
    } else if (donePage) {
        currentText++;
        lengthAppearing = 0;
        donePage = false;
    } else if (canSkip) {
        donePage = true;
        lengthAppearing = string_length(string(text[currentText]));
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>-1</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>32,0</point>
    <point>32,32</point>
    <point>0,32</point>
  </PhysicsShapePoints>
</object>
